on: [push]
name: Frontend_Container_Workflow

jobs:
  build-and-deploy:
    runs-on: ubuntu-latest

    steps:
    
    # Stap 1: GitHub-repository ophalen
    - name: 'Checkout GitHub Action'
      uses: actions/checkout@main

    # Stap 2: Login via Azure CLI (gebruik je service principal credentials)
    - name: 'Login via Azure CLI'
      uses: azure/login@v1
      with:
        creds: ${{ secrets.AZURE_CREDENTIALS }}
    
    # Stap 3: Login naar Azure Container Registry
    - name: 'Login to Azure Container Registry'
      uses: azure/docker-login@v1
      with:
        login-server: ${{ secrets.REGISTRY_LOGIN_SERVER }}
        username: ${{ secrets.AZURE_REGISTRY_USERNAME }}
        password: ${{ secrets.AZURE_REGISTRY_PASSWORD }}

    # Stap 4: Docker image bouwen en pushen
    - run: |
        docker build -t ${{ secrets.REGISTRY_LOGIN_SERVER }}/frontend:${{ github.sha }} ./frontend
        docker push ${{ secrets.REGISTRY_LOGIN_SERVER }}/frontend:${{ github.sha }}
    # Stap 5: Verwijder de bestaande Container Instance (indien aanwezig)
    - name: 'Remove Existing Container Instance'
      run: |
        az container delete \
          --name aci-frontend \
          --resource-group ${{ secrets.AZURE_RESOURCE_GROUP }} \
          --yes

    # Stap 6: Deploy de nieuwe Container Group met twee containers
    - name: 'Deploy to Azure Container Instance with multiple containers'
      run: |
        az container create \
          --resource-group ${{ secrets.AZURE_RESOURCE_GROUP }} \
          --name aci-payment-system \
          --location northeurope \
          --image ${{ secrets.REGISTRY_LOGIN_SERVER }}/frontend:${{ github.sha }} \
          --image ${{ secrets.REGISTRY_LOGIN_SERVER }}/backend:${{ github.sha }} \
          --cpu 1 \
          --memory 2.0 \
          --ports 80 \
          --registry-login-server ${{ secrets.REGISTRY_LOGIN_SERVER }} \
          --registry-username ${{ secrets.AZURE_REGISTRY_USERNAME }} \
          --registry-password ${{ secrets.AZURE_REGISTRY_PASSWORD }} \
          --dns-name-label ${{ secrets.AZURE_RESOURCE_GROUP }}
          --os-type Linux